/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -i meegouxsharingdbustypes.h -a ../interfaces/meego-ux-sharing-daemon_adaptor.h:../interfaces/meego-ux-sharing-daemon_adaptor.cpp ../interfaces/meego-ux-sharing-daemon.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "../daemon/meegouxsharingdaemon.h"

#include "../interfaces/meego-ux-sharing-daemon_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SharingAdaptor
 */

SharingAdaptor::SharingAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SharingAdaptor::~SharingAdaptor()
{
    // destructor
}

bool SharingAdaptor::CancelShare(int opid)
{
    // handle method call com.meego.ux.sharing.CancelShare
    bool result;
    QMetaObject::invokeMethod(parent(), "CancelShare", Q_RETURN_ARG(bool, result), Q_ARG(int, opid));
    return result;
}

QStringList SharingAdaptor::GetAllServices()
{
    // handle method call com.meego.ux.sharing.GetAllServices
    QStringList services;
    QMetaObject::invokeMethod(parent(), "GetAllServices", Q_RETURN_ARG(QStringList, services));
    return services;
}

QStringList SharingAdaptor::GetServicesForType(const QString &type)
{
    // handle method call com.meego.ux.sharing.GetServicesForType
    QStringList services;
    QMetaObject::invokeMethod(parent(), "GetServicesForType", Q_RETURN_ARG(QStringList, services), Q_ARG(QString, type));
    return services;
}

void SharingAdaptor::RescanPlugins()
{
    // handle method call com.meego.ux.sharing.RescanPlugins
    QMetaObject::invokeMethod(parent(), "RescanPlugins");
}

int SharingAdaptor::Share(const QString &service, const QString &sharetype, ArrayOfShareItemStruct items, QString &errmessage)
{
    // handle method call com.meego.ux.sharing.Share
    //return static_cast<YourObjectType *>(parent())->Share(service, sharetype, items, errmessage);
    return qobject_cast<MeeGoUXSharingDaemon *>(parent())->Share(service, sharetype, items, errmessage);
}

