/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -i meegouxsharingdbustypes.h -a ../interfaces/meego-ux-sharing-daemon_adaptor.h:../interfaces/meego-ux-sharing-daemon_adaptor.cpp ../interfaces/meego-ux-sharing-daemon.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef MEEGO_UX_SHARING_DAEMON_ADAPTOR_H_1367652591
#define MEEGO_UX_SHARING_DAEMON_ADAPTOR_H_1367652591

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "meegouxsharingdbustypes.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.meego.ux.sharing
 */
class SharingAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.meego.ux.sharing")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.meego.ux.sharing\">\n"
"    <doc:doc>\n"
"      <doc:summary>Core interface.</doc:summary>\n"
"    </doc:doc>\n"
"    <method name=\"GetAllServices\">\n"
"      <arg direction=\"out\" type=\"as\" name=\"services\">\n"
"        <doc:doc>\n"
"          <doc:summary>The list of sharing service names that are available</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"GetServicesForType\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"type\">\n"
"        <doc:doc>\n"
"          <doc:summary>The type of data to share. Valid values include x-meego-ux-sharing/image, x-meego-ux-sharing/video, x-meego-ux-sharing/music, or any random value as defined by plugins to the sharing service</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"out\" type=\"as\" name=\"services\">\n"
"        <doc:doc>\n"
"          <doc:summary>The list of sharing service names that are available for the specified type</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"RescanPlugins\">\n"
"      <doc:doc>\n"
"        <doc:summary>Cause the daemon to rescan the available plugins</doc:summary>\n"
"      </doc:doc>\n"
"    </method>\n"
"    <method name=\"Share\">\n"
"      <annotation value=\"ArrayOfShareItemStruct\" name=\"com.trolltech.QtDBus.QtTypeName.In2\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"service\">\n"
"        <doc:doc>\n"
"          <doc:summary>The name of the service to perform the sharing operation with</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"s\" name=\"sharetype\">\n"
"        <doc:doc>\n"
"          <doc:summary>The share type to perform</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"a(sa{ss})\" name=\"items\">\n"
"        <doc:doc>\n"
"          <doc:summary>The array of items to share</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"out\" type=\"i\" name=\"opid\">\n"
"        <doc:doc>\n"
"          <doc:summary>The operation id that will be used for ShareProgress signals. -1 on error.</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"out\" type=\"s\" name=\"errmessage\">\n"
"        <doc:doc>\n"
"          <doc:summary>If opid == -1, then errmessage should contain a user-facing descriptive error message</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"CancelShare\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"opid\">\n"
"        <doc:doc>\n"
"          <doc:summary>The sharing id to cancel</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"out\" type=\"b\" name=\"result\">\n"
"        <doc:doc>\n"
"          <doc:summary>True if the cancel was a success, false if it failed</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"ServiceAdded\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"name\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"type\"/>\n"
"    </signal>\n"
"    <signal name=\"ServiceRemoved\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"name\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"type\"/>\n"
"    </signal>\n"
"    <signal name=\"ShareProgress\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"service\">\n"
"        <doc:doc>\n"
"          <doc:summary>The name of the service that is sending the signal</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"out\" type=\"i\" name=\"opid\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"progress\">\n"
"        <doc:doc>\n"
"          <doc:summary>The progress in integer percents (50 == 50%), or -1 if the share failed.</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"      <arg direction=\"out\" type=\"s\" name=\"message\">\n"
"        <doc:doc>\n"
"          <doc:summary>A user-facing status text message - can be empty. Also used as the user-facing error message if progress == -1</doc:summary>\n"
"        </doc:doc>\n"
"      </arg>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    SharingAdaptor(QObject *parent);
    virtual ~SharingAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool CancelShare(int opid);
    QStringList GetAllServices();
    QStringList GetServicesForType(const QString &type);
    void RescanPlugins();
    int Share(const QString &service, const QString &sharetype, ArrayOfShareItemStruct items, QString &errmessage);
Q_SIGNALS: // SIGNALS
    void ServiceAdded(const QString &name, const QString &type);
    void ServiceRemoved(const QString &name, const QString &type);
    void ShareProgress(const QString &service, int opid, int progress, const QString &message);
};

#endif
